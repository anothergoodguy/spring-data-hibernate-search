# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.sample.shop: DEBUG

management:
  health:
    elasticsearch:
      enabled: false

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/shopApp?useUnicode=true?useUnicode=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&createDatabaseIfNotExist=true
    username: root
    password:
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    database: MYSQL
    show-sql: false

    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: true
      hibernate.cache.use_minimal_puts: true
      hibernate.show_sql: false
      hibernate.format_sql: false
      #hibernate.search.backend.discovery.enabled: true
      hibernate:
        envers:
        #autoRegisterListeners: false
        org:
          hibernate:
            envers:
              audit_table_suffix: '_version'
              store_data_at_delete: true
        search:
          schema_management:
            strategy: create-or-update
          configuration_property_checking:
            strategy: ignore
          backend:
            type: elasticsearch
            analysis:
              configurer: 'com.sample.shop.config.ElasticsearchAnalysisConfig'
            scroll_timeout: 60
            dynamic_mapping: strict
            mapping:
              type_name:
                strategy: discriminator
            schema_management:
              minimal_required_status_wait_timeout: 900000
              minimal_required_status: yellow
            max_connections_per_route: 10
            max_connections: 200
            read_timeout: 900000
            connection_timeout: 100000
            request_timeout: 900000
            discovery:
              refresh_interval: 10
              enabled: false
            indexing:
              max_bulk_size: 100
              queue_size: 10
              queue_count: 10
            thread_pool:
              size: 100
            multi_tenancy:
              strategy: none
            sharding:
              number_of_shards: 4
              strategy: hash
            io:
              merge:
                max_forced_size: 7
                max_size: 7
                factor: 10
              writer:
                ram_buffer_size: 10
              refresh_interval: 0
              commit_interval: 500
            layout:
              strategy: simple
            hosts: localhost:9200
            protocol: http

  elasticsearch:
    uris: http://localhost:9200
    connection-timeout: 1s
    read-timeout: 1m
    multi-threaded: true
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  mail:
    host: localhost
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false

server:
  port: 8080

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  cache: # Cache configuration
    infinispan:
      config-file: default-configs/default-jgroups-tcp.xml
      statsEnabled: true
      # local app cache
      local:
        time-to-live-seconds: 3600 # By default objects stay 1 hour (in seconds) in the cache
        max-entries: 100 # Number of objects in each cache entry
      # distributed app cache
      distributed:
        time-to-live-seconds: 3600 # By default objects stay 1 hour (in seconds) in the cache
        max-entries: 100 # Number of objects in each cache entry
        instance-count: 1
      # replicated app cache
      replicated:
        time-to-live-seconds: 3600 # By default objects stay 1 hour (in seconds) in the cache
        max-entries: 100 # Number of objects in each cache entry
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:9060,https://localhost:9060'
    # Enable CORS when running in GitHub Codespaces
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: ZTMwZDg1N2ZmMjNhMjg5MWE5MzdlNTMyMzVkYTJjMGU4NmU2ZGU3NTE2MzRkMzU0OWRjNjc4NjFmNWE1YTJhZDIxYjFlNmEyNTBlYjcyZWU0NWFhZTU0Y2JjOWIxMGY5ODA2MTQ2NDdlMjVlNDczYjM4MDNmNDM4ZTA1MDdhZGE=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://10.214.2.133:8080
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
